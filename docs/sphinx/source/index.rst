Welcome to SofaPython3's documentation!
=======================================

The project is composed of a Sofa plugin and python modules. 

The Sofa plugin is named SofaPython3 and it embeds a python3 interpreter and a scene loader to write scene directly using python and 
to implement component behavior in python. 

Apart from the SofaPython3 plugin this project also provide several python modules that exposes the different c++ components from Sofa. 
These binding are designed to be idiomatic python3 API with tight integration for numpy. 

Features
--------
The Sofa python module:
^^^^^^^^^^^^^^^^^^^^^^^
Exposes the base Sofa object to build and manipulate a Sofa simulation. 

- contains 4 submodules : Sofa.Core, that contains bindings for scene components, Sofa.Simulation, that contains functions to conduct simulation, Sofa.Types, that contains default types available in Sofa, and Sofa.Helper, that contains utility functions.
- provides a copy-less API to access the sofa Data containers 
- allows to implement custom sofa object (ForceField,  Controller) in python
- has docstring documentation

Try it: ```python import Sofa```

The SofaRuntime python module:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- access the runtime specific stuff (GUI, GLViewers, runSofa internal status) [POC]
- docstring with sphinx content [TBD]

Try it: ```python import SofaRuntime```

Developer's environment
^^^^^^^^^^^^^^^^^^^^^^^
- autogenerated documentation using sphinx [DONE]
- automated update the docs from the c++'s docstring: https://sofapython3.readthedocs.io/en/latest/ [WIP]
- code completion with common editor [WIP, some editor are not working with c++ modules]


Execution environment: 
^^^^^^^^^^^^^^^^^^^^^^
- SofaPython3 is a plugin to include a python3 environment in a Sofa scene [DONE],

Try it: ```xml <RequiredPlugin='SofaPython3'/>```


- Sofa and SofaRuntime are the python module that can be imported in any python interpreter (python3, ipython, jupyter)[DONE], 

Try it: ```python python3 minimalscene.py```

- Access to Sofa simulation within the MathLab python interpreter [WIP-POC].  
- Make a full python GUI application (with UI framework like PySide2, pygame) and render an integrated sofa scene in an opengl context [POC]



Global diagram of SofaPython3:
------------------------------
.. figure:: images/SP3_global_arch.png
	:alt: How SP3 fits in the SOFA usage pipeline
	:align: center



.. toctree::
   :glob:
   :maxdepth: 1
    
   menu/install
   menu/SofaPlugin
   menu/SofaModule
   menu/CustomModule
  
   
Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`


